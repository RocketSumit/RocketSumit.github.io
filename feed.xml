<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://rocketsumit.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://rocketsumit.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-06-15T08:03:28+00:00</updated><id>https://rocketsumit.github.io/feed.xml</id><title type="html">blank</title><subtitle>Portfolio website. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Hyperparameter Tuning in Tensorflow With Hparams Dashboard</title><link href="https://rocketsumit.github.io/blog/2021/hyperparam/" rel="alternate" type="text/html" title="Hyperparameter Tuning in Tensorflow With Hparams Dashboard"/><published>2021-06-01T21:01:00+00:00</published><updated>2021-06-01T21:01:00+00:00</updated><id>https://rocketsumit.github.io/blog/2021/hyperparam</id><content type="html" xml:base="https://rocketsumit.github.io/blog/2021/hyperparam/"><![CDATA[<p>The term <code class="language-plaintext highlighter-rouge">hyperparameter</code> is widely used when building machine learning models. The hyperparameters are those parameters on which other parameters, such as model weights and bias, depend. Examples of hyperparameters are learning rate, optimizer, number of hidden layers, number of neurons in each hidden layer, etc. Therefore, it is crucial to find the optimal set of hyperparameters for your problem, which often occurs through an experimentation process known as <code class="language-plaintext highlighter-rouge">Hyperparameter Tuning.</code></p> <p>Tensorboard provides several tools through the Hparams dashboard to help seek the best hyperparameters through experimentation. You can follow up on the tutorial <a href="https://www.tensorflow.org/tensorboard/hyperparameter_tuning_with_hparams">here</a>.</p> <h2 id="contents">Contents</h2> <ul> <li><a href="#contents">Contents</a></li> <li><a href="#the-usual-way">The usual way</a></li> <li><a href="#refactoring---without-using-nested-loops">Refactoring - without using nested loops</a></li> <li><a href="#if-you-are-not-a-fan-of-tensorboard">If you are not a fan of tensorboard</a></li> <li><a href="#references">References</a></li> </ul> <h2 id="the-usual-way">The usual way</h2> <p>You may have to write multiple for loops to go through each hyperparameter, which you may want to avoid.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">HP_NUM_UNITS</span> <span class="o">=</span> <span class="n">hp</span><span class="p">.</span><span class="nc">HParam</span><span class="p">(</span><span class="sh">'</span><span class="s">num_units</span><span class="sh">'</span><span class="p">,</span> <span class="n">hp</span><span class="p">.</span><span class="nc">Discrete</span><span class="p">([</span><span class="mi">16</span><span class="p">,</span> <span class="mi">32</span><span class="p">]))</span>
<span class="n">HP_DROPOUT</span> <span class="o">=</span> <span class="n">hp</span><span class="p">.</span><span class="nc">HParam</span><span class="p">(</span><span class="sh">'</span><span class="s">dropout</span><span class="sh">'</span><span class="p">,</span> <span class="n">hp</span><span class="p">.</span><span class="nc">RealInterval</span><span class="p">(</span><span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">))</span>
<span class="n">HP_OPTIMIZER</span> <span class="o">=</span> <span class="n">hp</span><span class="p">.</span><span class="nc">HParam</span><span class="p">(</span><span class="sh">'</span><span class="s">optimizer</span><span class="sh">'</span><span class="p">,</span> <span class="n">hp</span><span class="p">.</span><span class="nc">Discrete</span><span class="p">([</span><span class="sh">'</span><span class="s">adam</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">sgd</span><span class="sh">'</span><span class="p">]))</span>
<span class="n">METRIC_ACCURACY</span> <span class="o">=</span> <span class="sh">'</span><span class="s">loss</span><span class="sh">'</span>

<span class="bp">...</span>

<span class="k">for</span> <span class="n">num_units</span> <span class="ow">in</span> <span class="n">HP_NUM_UNITS</span><span class="p">.</span><span class="n">domain</span><span class="p">.</span><span class="n">values</span><span class="p">:</span>
  <span class="k">for</span> <span class="n">dropout_rate</span> <span class="ow">in</span> <span class="p">(</span><span class="n">HP_DROPOUT</span><span class="p">.</span><span class="n">domain</span><span class="p">.</span><span class="n">min_value</span><span class="p">,</span> <span class="n">HP_DROPOUT</span><span class="p">.</span><span class="n">domain</span><span class="p">.</span><span class="n">max_value</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">optimizer</span> <span class="ow">in</span> <span class="n">HP_OPTIMIZER</span><span class="p">.</span><span class="n">domain</span><span class="p">.</span><span class="n">values</span><span class="p">:</span>
      <span class="n">hparams</span> <span class="o">=</span> <span class="p">{</span>
          <span class="n">HP_NUM_UNITS</span><span class="p">:</span> <span class="n">num_units</span><span class="p">,</span>
          <span class="n">HP_DROPOUT</span><span class="p">:</span> <span class="n">dropout_rate</span><span class="p">,</span>
          <span class="n">HP_OPTIMIZER</span><span class="p">:</span> <span class="n">optimizer</span><span class="p">,</span>
      <span class="p">}</span>
      <span class="nf">print</span><span class="p">({</span><span class="n">h</span><span class="p">.</span><span class="n">name</span><span class="p">:</span> <span class="n">hparams</span><span class="p">[</span><span class="n">h</span><span class="p">]</span> <span class="k">for</span> <span class="n">h</span> <span class="ow">in</span> <span class="n">hparams</span><span class="p">})</span>
      <span class="c1"># run model with hparams
</span>      <span class="n">session_num</span> <span class="o">+=</span> <span class="mi">1</span>
</code></pre></div></div> <hr/> <h2 id="refactoring---without-using-nested-loops">Refactoring - without using nested loops</h2> <p>A way to refactor the above code could be using the product() function from the itertools module. This function finds the cartesian product of multiple sets i.e returns each possible combination of set elements.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">itertools</span> <span class="kn">import</span> <span class="n">product</span>
<span class="n">param_values</span> <span class="o">=</span> <span class="p">[</span><span class="n">HP_NUM_UNITS</span><span class="p">.</span><span class="n">domain</span><span class="p">.</span><span class="n">values</span><span class="p">,</span> <span class="p">[</span><span class="n">d</span> <span class="k">for</span> <span class="n">d</span> <span class="ow">in</span> <span class="p">(</span><span class="n">HP_DROPOUT</span><span class="p">.</span><span class="n">domain</span><span class="p">.</span><span class="n">min_value</span><span class="p">,</span> <span class="n">HP_DROPOUT</span><span class="p">.</span><span class="n">domain</span><span class="p">.</span><span class="n">max_value</span><span class="p">)],</span>
                <span class="n">HP_OPTIMIZER</span><span class="p">.</span><span class="n">domain</span><span class="p">.</span><span class="n">values</span><span class="p">]</span>
<span class="nf">print</span><span class="p">(</span><span class="n">param_values</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">[[</span><span class="mi">16</span><span class="p">,</span> <span class="mi">32</span><span class="p">],</span> <span class="p">[</span><span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">],</span> <span class="p">[</span><span class="sh">'</span><span class="s">adam</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">sgd</span><span class="sh">'</span><span class="p">]]</span>
<span class="nf">list</span><span class="p">(</span><span class="nf">product</span><span class="p">(</span><span class="o">*</span><span class="n">param_values</span><span class="p">))</span>
<span class="o">&gt;&gt;&gt;</span> <span class="p">[(</span><span class="mi">16</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="sh">'</span><span class="s">adam</span><span class="sh">'</span><span class="p">),</span>
<span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="sh">'</span><span class="s">sgd</span><span class="sh">'</span><span class="p">),</span>
<span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="sh">'</span><span class="s">adam</span><span class="sh">'</span><span class="p">),</span>
<span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="sh">'</span><span class="s">sgd</span><span class="sh">'</span><span class="p">),</span>
<span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="sh">'</span><span class="s">adam</span><span class="sh">'</span><span class="p">),</span>
<span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="sh">'</span><span class="s">sgd</span><span class="sh">'</span><span class="p">),</span>
<span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="sh">'</span><span class="s">adam</span><span class="sh">'</span><span class="p">),</span>
<span class="p">(</span><span class="mi">32</span><span class="p">,</span> <span class="mf">0.2</span><span class="p">,</span> <span class="sh">'</span><span class="s">sgd</span><span class="sh">'</span><span class="p">)]</span>
</code></pre></div></div> <p>A single for loop can then be used to iterate over all combinations of hyperparameters.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">num_units</span><span class="p">,</span> <span class="n">dropout_rate</span><span class="p">,</span> <span class="n">optimizer</span> <span class="ow">in</span> <span class="nf">list</span><span class="p">(</span><span class="nf">product</span><span class="p">(</span><span class="o">*</span><span class="n">param_values</span><span class="p">)):</span>
	<span class="n">hparams</span> <span class="o">=</span> <span class="p">{</span>
	        <span class="n">HP_NUM_UNITS</span><span class="p">:</span> <span class="n">num_units</span><span class="p">,</span>
	        <span class="n">HP_DROPOUT</span><span class="p">:</span> <span class="n">dropout_rate</span><span class="p">,</span>
	        <span class="n">HP_OPTIMIZER</span><span class="p">:</span> <span class="n">optimizer</span><span class="p">,</span>
	    <span class="p">}</span>
	<span class="n">run_name</span> <span class="o">=</span> <span class="sh">"</span><span class="s">run-%d</span><span class="sh">"</span> <span class="o">%</span> <span class="n">session_num</span>
	<span class="nf">print</span><span class="p">({</span><span class="n">h</span><span class="p">.</span><span class="n">name</span><span class="p">:</span> <span class="n">hparams</span><span class="p">[</span><span class="n">h</span><span class="p">]</span> <span class="k">for</span> <span class="n">h</span> <span class="ow">in</span> <span class="n">hparams</span><span class="p">})</span>
	<span class="c1"># run model with hparams
</span>	<span class="n">session_num</span> <span class="o">+=</span> <span class="mi">1</span>
</code></pre></div></div> <hr/> <h2 id="if-you-are-not-a-fan-of-tensorboard">If you are not a fan of tensorboard</h2> <p>We’ll save all the data ourselves, so we can analyze it outside TensorBoard. We can utilize the panda’s data frame to keep all crucial parameters. It is recommended to use classes and objects for implementing the models. Here’s an example:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">model</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="p">...):</span>
    <span class="bp">...</span>

    <span class="n">results</span> <span class="o">=</span> <span class="nc">OrderedDict</span><span class="p">()</span>
    <span class="n">results</span><span class="p">[</span><span class="sh">"</span><span class="s">run</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">run_count</span>
    <span class="n">results</span><span class="p">[</span><span class="sh">"</span><span class="s">epoch</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="n">epoch_count</span>
    <span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">loss</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">loss</span>
    <span class="n">results</span><span class="p">[</span><span class="sh">"</span><span class="s">accuracy</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="n">accuracy</span>
    <span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">epoch duration</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">epoch_duration</span>
    <span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">batch size</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">run_duration</span>
    <span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">self</span><span class="p">.</span><span class="n">run_params</span><span class="p">.</span><span class="nf">_asdict</span><span class="p">().</span><span class="nf">items</span><span class="p">():</span> <span class="n">results</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span>
    <span class="n">self</span><span class="p">.</span><span class="n">run_data</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">results</span><span class="p">)</span>

    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">.</span><span class="nf">from_dict</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">run_data</span><span class="p">,</span> <span class="n">orient</span><span class="o">=</span><span class="sh">'</span><span class="s">columns</span><span class="sh">'</span><span class="p">)</span>

    <span class="bp">...</span>
</code></pre></div></div> <table> <thead> <tr> <th>run</th> <th>epoch</th> <th>loss</th> <th>accuracy</th> <th>epoch duration</th> <th>batch size</th> </tr> </thead> <tbody> <tr> <td>1</td> <td>1</td> <td>0.994</td> <td>0.621</td> <td>20.2</td> <td>1024</td> </tr> <tr> <td>1</td> <td>2</td> <td>0.546</td> <td>0.814</td> <td>19.3</td> <td>1024</td> </tr> <tr> <td>1</td> <td>3</td> <td>0.434</td> <td>0.825</td> <td>20.5</td> <td>1024</td> </tr> </tbody> </table> <hr/> <h2 id="references">References</h2> <p><a href="https://deeplizard.com/learn/video/ycxulUVoNbk">Deep Lizard - Hyperparameter Tuning and Experimenting - Training Deep Neural Networks</a></p> <p><a href="https://deeplizard.com/learn/video/ozpv_peZ894">Deep Lizard - CNN Training Loop Refactoring - Simultaneous Hyperparameter Testing</a></p>]]></content><author><name></name></author><category term="tech"/><category term="code"/><summary type="html"><![CDATA[The term hyperparameter is widely used when building machine learning models. The hyperparameters are those parameters on which other parameters, such as model weights and bias, depend. Examples of hyperparameters are learning rate, optimizer, number of hidden layers, number of neurons in each hidden layer, etc. Therefore, it is crucial to find the optimal set of hyperparameters for your problem, which often occurs through an experimentation process known as Hyperparameter Tuning.]]></summary></entry><entry><title type="html">Block Annoying Ads on Android Without Root!</title><link href="https://rocketsumit.github.io/blog/2021/adblock/" rel="alternate" type="text/html" title="Block Annoying Ads on Android Without Root!"/><published>2021-04-26T22:11:00+00:00</published><updated>2021-04-26T22:11:00+00:00</updated><id>https://rocketsumit.github.io/blog/2021/adblock</id><content type="html" xml:base="https://rocketsumit.github.io/blog/2021/adblock/"><![CDATA[<p>If you are sick of those in-app ads, especially while watching youtube videos or reading articles on the browser, then you are at the right place. You can eliminate advertisements without buying any premium app or rooting the phone.</p> <p>There are a couple of methods to do so effectively.</p> <h2 id="contents">Contents</h2> <ul> <li><a href="#contents">Contents</a></li> <li><a href="#using-a-private-dns">Using a private DNS</a></li> <li><a href="#using-firefox-to-browse-and-watch-youtube">Using Firefox to browse and watch YouTube</a></li> <li><a href="#references">References</a></li> </ul> <h2 id="using-a-private-dns">Using a private DNS</h2> <p>This is the easiest way to block ads on android by changing the DNS provider. This method requires no apps, but it only works on Android phones with Android 9 Pie and above, as the Private DNS setting was introduced with this version of the OS.</p> <p>To change the DNS, go to Settings &gt; Network and Internet &gt; Advanced &gt; Private DNS. Choose Private DNS Provider Hostname, enter <code class="language-plaintext highlighter-rouge">dns.adguard.com</code> or <code class="language-plaintext highlighter-rouge">us.adhole.org,</code> and hit Save. That’s it. You’ll no longer see any in-app ad banners or advertisements on web browsers. However, some ads will still be visible, but at least those long video ads will be gone.</p> <p>The path to changing the Private DNS may be different on some phones. If your phone UX has a search bar, search for Private DNS to land on the relevant settings page.</p> <h2 id="using-firefox-to-browse-and-watch-youtube">Using Firefox to browse and watch YouTube</h2> <p>This is what I currently use to block ads while reading and watching youtube, and it works perfectly. All you need is the Firefox browser with specific add-ons and settings.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blogs/adblock/threedots-480.webp 480w,/assets/img/blogs/adblock/threedots-800.webp 800w,/assets/img/blogs/adblock/threedots-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blogs/adblock/threedots.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blogs/adblock/addons-480.webp 480w,/assets/img/blogs/adblock/addons-800.webp 800w,/assets/img/blogs/adblock/addons-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blogs/adblock/addons.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blogs/adblock/uBlockOrigin-480.webp 480w,/assets/img/blogs/adblock/uBlockOrigin-800.webp 800w,/assets/img/blogs/adblock/uBlockOrigin-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/blogs/adblock/uBlockOrigin.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" title="example image" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Go to Add-ons from the three-dot menu option. Look for the uBlock Origin add-on and click the + button on the right </div> <p>There you go for an add-less experience on your browser. The only catch is you will have to browse websites and articles and watch youtube videos on your Firefox browser. At first, it may seem inconvenient, but believe me, you will get used to it in a day. After all, a tiny sacrifice to get rid of ads on youtube!</p> <p>Suppose you notice clipping of youtube videos in full-screen mode on Firefox. In that case, it is due to shortcomings of the firefox browser not optimized for higher aspect ratios than 16:9. But nothing to worry about; there is a fix. Open add-ons in Firefox, go to settings of uBlock Origin and add the following filter.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>m.youtube.com##.html5-video-player :style(max-height: 100vh ! important)
youtube.com##player-container :style(max-height: 100vh ! important)
</code></pre></div></div> <p><img src="/assets/img/blogs/adblock/filter.png" width="400" height="300"/></p> <p>Enjoy!</p> <hr/> <h2 id="references">References</h2> <p><a href="https://www.xda-developers.com/block-ads-on-android/">XDA Developers - block ads</a></p>]]></content><author><name></name></author><category term="tech"/><category term="hack"/><summary type="html"><![CDATA[If you are sick of those in-app ads, especially while watching youtube videos or reading articles on the browser, then you are at the right place. You can eliminate advertisements without buying any premium app or rooting the phone.]]></summary></entry></feed>